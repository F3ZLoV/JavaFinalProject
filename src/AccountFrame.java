
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author watmx
 */
public class AccountFrame extends javax.swing.JFrame {
    private String userId;
    private List<String[]> accounts;
    private String accountNumber;
    private long balance;
    /**
     * Creates new form AccountFrame
     */
    public AccountFrame() {
        initComponents();
    }
    
    public AccountFrame(String accountNumber, long balance) {
        this.accountNumber = accountNumber;
        this.balance = balance;
        initComponents();
        displayAccountInfo();
        loadTransactionHistory();
    }
    
    public AccountFrame(String userId, List<String[]> accounts, String accountNumber, long balance) {
        this.userId = userId;
        this.accounts = accounts;
        this.accountNumber = accountNumber;
        this.balance = balance;
        initComponents();
        displayAccountInfo();
        loadTransactionHistory();
    }
    
    private String formatAccountNumber(String accountNumber) {
        return accountNumber.substring(0, 4) + "-" + accountNumber.substring(4, 7) + "-" + accountNumber.substring(7);
    }
    
    private void displayAccountInfo() {
        String accountType = accounts.stream()
                .filter(acc -> acc[0].equals(accountNumber))
                .map(acc -> {
                    if (acc[2].equalsIgnoreCase("SAVINGS")) {
                        return "예금 계좌";
                    } else if (acc[2].equalsIgnoreCase("DEPOSIT")) {
                        return "적금 계좌";
                    } else {
                        return "일반 계좌";
                    }
                })
                .findFirst()
                .orElse("알 수 없음");
        lblAccountNumber.setText("계좌 번호: " + formatAccountNumber(accountNumber));
        lblBalance.setText("잔액: " + balance + "원");
        lblAccountType.setText("계좌 유형: " + accountType);
    }

    private void loadTransactionHistory() {
        DB_MAN db = new DB_MAN();
        try {
            db.dbOpen();
            List<String[]> transactions = db.getTransactionHistory(accountNumber);
            DefaultTableModel model = (DefaultTableModel) tblTransactions.getModel();
            model.setRowCount(0);
            for (String[] transaction : transactions) {
                model.addRow(transaction); // 거래 내역 추가
            }
            db.dbClose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "거래 내역 불러오기 오류: " + e.getMessage());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblAccountNumber = new javax.swing.JLabel();
        lblBalance = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        txtTargetAccount = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTransactions = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnDeposit = new javax.swing.JButton();
        btnWithdraw = new javax.swing.JButton();
        btnTransfer = new javax.swing.JButton();
        lblAccountType = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("계좌 관리");

        lblAccountNumber.setText("계좌 번호 : ");

        lblBalance.setText("현재 잔액 : ");

        tblTransactions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "금액", "대상 계좌", "설명", "날짜"
            }
        ));
        jScrollPane1.setViewportView(tblTransactions);

        jLabel2.setText("보낼 계좌 :");

        btnBack.setText("닫기");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnDeposit.setText("입금");
        btnDeposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepositActionPerformed(evt);
            }
        });

        btnWithdraw.setText("출금");
        btnWithdraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWithdrawActionPerformed(evt);
            }
        });

        btnTransfer.setText("송금");
        btnTransfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransferActionPerformed(evt);
            }
        });

        lblAccountType.setText("계좌 유형 :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBack)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtTargetAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnTransfer))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblAccountNumber)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(178, 178, 178)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblBalance)
                                        .addComponent(jLabel1))))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblAccountType)
                                .addComponent(btnWithdraw)
                                .addComponent(btnDeposit)))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAccountNumber)
                    .addComponent(lblBalance)
                    .addComponent(lblAccountType))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDeposit, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnWithdraw)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTargetAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btnTransfer))
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDepositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepositActionPerformed
        try {
            long amount = Long.parseLong(txtAmount.getText());
            if (amount <= 0) {
                JOptionPane.showMessageDialog(this, "0보다 큰 금액을 입력하세요.");
                return;
            }
            DB_MAN db = new DB_MAN();
            try {
                db.dbOpen();
                db.updateBalance(accountNumber, amount, "입금");
                JOptionPane.showMessageDialog(this, "입금 완료");
                balance += amount;
                displayAccountInfo();
                loadTransactionHistory();
                db.dbClose();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "입금 오류: " + e.getMessage());
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "유효한 숫자를 입력하세요.", "입력 오류", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDepositActionPerformed

    private void btnWithdrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWithdrawActionPerformed
        try {
            long amount = Long.parseLong(txtAmount.getText());
            if (amount <= 0) {
                JOptionPane.showMessageDialog(this, "0보다 큰 금액을 입력하세요.");
                return;
            }
            if (amount > balance) {
                JOptionPane.showMessageDialog(this, "잔액이 부족합니다.");
                return;
            }
            DB_MAN db = new DB_MAN();
            try {
                db.dbOpen();
                db.updateBalance(accountNumber, -amount, "출금");
                JOptionPane.showMessageDialog(this, "출금 완료");
                balance -= amount;
                displayAccountInfo();
                loadTransactionHistory();
                db.dbClose();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "출금 오류: " + e.getMessage());
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "유효한 숫자를 입력하세요.", "입력 오류", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnWithdrawActionPerformed

    private void btnTransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransferActionPerformed
        String targetAccount = txtTargetAccount.getText();
        String amountText = txtAmount.getText();

        if (targetAccount.isEmpty()) {
            JOptionPane.showMessageDialog(this, "송금할 계좌 번호를 입력하세요.", "입력 오류", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (amountText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "송금할 금액을 입력하세요.", "입력 오류", JOptionPane.ERROR_MESSAGE);
            return;
        }

        long amount;
        try {
            amount = Long.parseLong(amountText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "송금 금액은 숫자만 입력 가능합니다.", "입력 오류", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (amount <= 0) {
            JOptionPane.showMessageDialog(this, "송금 금액은 0보다 커야 합니다.", "입력 오류", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (amount > balance) {
            JOptionPane.showMessageDialog(this, "잔액이 부족합니다.", "송금 오류", JOptionPane.ERROR_MESSAGE);
            return;
        }

        DB_MAN db = new DB_MAN();
        try {
            db.dbOpen();
            db.transferMoney(accountNumber, targetAccount, amount);
            JOptionPane.showMessageDialog(this, "송금 완료!");
            balance -= amount; // 현재 잔액 업데이트
            displayAccountInfo(); // 잔액 갱신
            loadTransactionHistory(); // 거래 내역 갱신
            db.dbClose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "송금 오류: " + e.getMessage(), "오류", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnTransferActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose();
        MainFrame mainFrame = new MainFrame(userId, accounts);
        mainFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccountFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccountFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccountFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccountFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AccountFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeposit;
    private javax.swing.JButton btnTransfer;
    private javax.swing.JButton btnWithdraw;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAccountNumber;
    private javax.swing.JLabel lblAccountType;
    private javax.swing.JLabel lblBalance;
    private javax.swing.JTable tblTransactions;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtTargetAccount;
    // End of variables declaration//GEN-END:variables
}
